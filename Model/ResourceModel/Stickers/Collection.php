<?php

namespace Luxinten\ProductStickers\Model\ResourceModel\Stickers;

use \Magento\Store\Model\StoreManager;
use \Magento\Store\Api\Data\StoreInterface;
use \Magento\Framework\DB\Select;
use \Magento\Catalog\Model\ResourceModel\Collection\AbstractCollection;

class Collection extends AbstractCollection
{

    protected $_storeId;

    /**
     * Define resource model
     *
     * @return void
     */
    protected function _construct()
    {
        $this->_init('Luxinten\ProductStickers\Model\Stickers', 'Luxinten\ProductStickers\Model\ResourceModel\Stickers');
    }

    /**
     * Set store scope
     *
     * @param int|string|StoreManager $store
     * @return AbstractCollection
     */
    public function setStore($store)
    {
        $this->setStoreId($this->_storeManager->getStore()->getId());
        return $this;
    }

    /**
     * Set store scope
     *
     * @param int|string|StoreManager $storeId
     * @return AbstractCollection
     */
    public function setStoreId($storeId)
    {
        if ($storeId instanceof StoreInterface) {
            $storeId = $storeId->getId();
        }
        $this->_storeId = (int)$storeId;
        return $this;
    }

    /**
     * Return current store id
     *
     * @return int
     */
    public function getStoreId()
    {
        if (is_null($this->_storeId)) {
            $this->setStoreId($this->_storeManager->getStore()->getId());
        }
        return $this->_storeId;
    }

    protected function _joinTextTable(Select $select, $storeId = 0, $suffix = '')
    {
        $connection = $this->getConnection();
        $tableAlias = 'text_table' . $suffix;
        $fieldAlias = 'text' . $suffix;
        $fields = array(
            $fieldAlias => $tableAlias . '.text',
        );

        if (empty($suffix)) {
            $fields['store_id'] = $tableAlias . '.store_id';
        }

        $select->joinLeft(
            array($tableAlias => $this->getTable('stickers_text')),
            '(' . implode (') AND (', array(
                sprintf('%s = %s',
                    $connection->quoteIdentifier('main_table.sticker_id'),
                    $connection->quoteIdentifier($tableAlias . '.sticker_id')),
                sprintf('%s = %d',
                    $connection->quoteIdentifier($tableAlias . '.store_id'),
                    $storeId),
            )) . ')',
            $fields
        );
        return $this;
    }

    protected function _initSelect()
    {
        parent::_initSelect();

        $suffix = '';
        if (($storeId = $this->getStoreId()) !== 0 && isset($storeId)) {
            $this->_joinTextTable($this->getSelect(), $storeId);
            $suffix = '_default';
        }

        $this->_joinTextTable($this->getSelect(), 0, $suffix);
        return $this;
    }

    protected function _afterLoad()
    {
        foreach ($this->_items as $item) {
            $this->getResource()->processObject($item);
        }

        return parent::_afterLoad(); // TODO: Change the autogenerated stub
    }

}